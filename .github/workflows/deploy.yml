name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          echo "${{ secrets.AWS_ECR_PASSWORD }}" | docker login -u AWS --password-stdin "${{ secrets.AWS_ECR_REGISTRY }}"
          docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Update ECS Task Definition
        id: update-task-definition
        run: |
          # Fetch the current task definition JSON
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION_FAMILY }} --query 'taskDefinition' --output json)
          
          # Update the task definition JSON with the new image
          echo "${TASK_DEFINITION}" | jq '.containerDefinitions[0].image = "${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest"' > updated-task-definition.json

          # Register the new task definition
          aws ecs register-task-definition --cli-input-json file://updated-task-definition.json

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment

      - name: Clean up Docker
        run: |
          docker system prune -af
