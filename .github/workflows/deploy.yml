name: Deploy to ECS

on:
  push:
    branches:
      - main  
jobs:
  deploy:
    runs-on: ubuntu-latest  

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to AWS ECR
      run: |
        echo "${{ secrets.AWS_ECR_PASSWORD }}" | docker login -u AWS --password-stdin "${{ secrets.AWS_ECR_REGISTRY }}"

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest .

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

    - name: Update ECS Task Definition
      run: |
        # Fetch the current task definition
        TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION_FAMILY }} --query 'taskDefinition' --output json)

        # Update the image URL in the task definition
        UPDATED_TASK_DEFINITION=$(echo "$TASK_DEFINITION" | jq '.containerDefinitions[0].image = "${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest"')

        # Register the updated task definition
        echo "$UPDATED_TASK_DEFINITION" > updated-task-definition.json
        aws ecs register-task-definition --cli-input-json file://updated-task-definition.json

    - name: Deploy to ECS
      run: |
        aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment

    - name: Clean up Docker
      run: |
        docker system prune -af
